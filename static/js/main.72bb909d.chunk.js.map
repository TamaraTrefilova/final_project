{"version":3,"sources":["components/Songs.js","components/Artist.js","components/Album.js","components/Video.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Songs","state","isLoading","fetchResults","error","name","artistName","choiceValue","itemsSize","url","this","props","artist","choice","size","parseInt","fetch","mode","then","response","json","data","setState","results","catch","styleObj","fontSize","color","textAlign","paddingTop","map","result","idx","odrer","className","src","alt","style","href","target","rel","Component","Artist","artistUrl","Album","Video","HomePage","onInputChange","e","inputVal","value","inputValue","isSubmitted","handleSelectOption","optionValue","isItemsSelected","handleSelect","itemsValue","onSubmit","preventDefault","window","alert","onCompleteHandler","type","onChange","todoItem","id","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72bb909d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './project.css';\nimport PropTypes from 'prop-types';\n\nclass Songs extends Component {\n\n    static propTypes = {\n       \n        artist: PropTypes.string.isRequired,\n        choice: PropTypes.string.isRequired,\n        size: PropTypes.string.isRequired\n    }\n\n    state = {\n        isLoading: true,\n        fetchResults: [],\n        error: '',\n        name:''\n    }\n\n\n    componentDidMount() {\n        let artistName = \"\";\n        let choiceValue = \"\";\n        let itemsSize = \"\";\n        let url = \"\";\n            artistName = this.props.artist;\n            choiceValue = this.props.choice;\n            if(this.props.size !==\"\"){\n                itemsSize = parseInt(this.props.size);\n              url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}&limit=${itemsSize}.`;\n            } else {\n                url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}`;\n            }\n\n            fetch(url, {\n                mode: 'no-cors' })\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({\n                        fetchResults: data.results,\n                        isLoading: false,\n                        name: data.results[0]['artistName']\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        isLoading: false,\n                        error: \"Nothing Found â€“ Sorry, but nothing matched ... \"\n                    })\n                });\n    }\n\n\n    render() {\n        const { isLoading, error, fetchResults } = this.state;\n        const styleObj = {\n            fontSize: 15,\n            color: \"blue\",\n            textAlign: \"center\",\n            paddingTop: \"100px\",\n        }\n      \n\n        return (\n            <div >\n\n                    {isLoading && <p>Loading...</p>}\n                    {error && <h3>{error}</h3>}\n                    <h1>{this.state.name}</h1>\n                    {fetchResults.map((result, idx) => {\n                        let odrer = idx+1;         \n                        return (\n\n                            <div className=\"container1\" key={idx}>\n                              <div className='description'>\n                                    <h3>Number# {odrer}</h3>\n                                    <h3>Track: {result['trackName']}</h3>\n                                    <div>\n                                    <img className='image'\n                                    src={result['artworkUrl100']}\n                                    alt='artis-image'>\n                                    </img>\n                                    <ul> <a style={styleObj} href={result['trackViewUrl']} target=\"_blank\" rel = \"noopener noreferrer\">Click to hear the track </a> </ul>                     \n                              </div>                       \n                            </div>\n                                \n                        </div>\n                        )\n                    })}\n\n            </div>\n        );\n    }\n\n}\n\nexport  default Songs","import React, { Component } from 'react';\nimport './project.css';\nimport PropTypes from 'prop-types';\nclass Artist extends Component {\n\n    static propTypes = {\n       \n        artist: PropTypes.string.isRequired,\n        choice: PropTypes.string.isRequired,\n        size: PropTypes.string.isRequired\n    }\n\n    state = {\n        isLoading: true,\n        fetchResults: [],\n        error: '',\n        name:'',\n        artistUrl: ''\n    }\n\n\n    componentDidMount() {\n        let artistName = \"\";\n        let choiceValue = \"\";\n        let url = \"\";\n            artistName = this.props.artist;\n            choiceValue = this.props.choice;\n           \n            url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}`;\n            \n            fetch(url, {\n                mode: 'no-cors' })\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({\n                        fetchResults: data.results,\n                        isLoading: false,\n                        name: data.results[0]['artistName'],\n                        artistUrl:data.results[0]['artistLinkUrl']\n\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        isLoading: false,\n                        error: \"Nothing Found â€“ Sorry, but nothing matched ... \"\n                    })\n                });\n    }\n\n\n    render() {\n        const { isLoading, error, name, artistUrl } = this.state;\n        const styleObj = {\n            fontSize: 15,\n            color: \"blue\",\n            textAlign: \"center\",\n            paddingTop: \"100px\",\n        }\n      \n\n        return (\n            <div className=\"flex-container-child\">\n            <div className=\"item\">\n                    {isLoading && <p>Loading...</p>}\n                    {error && <h3>{error}</h3>}\n                    {!error && <div>\n                        <h1>{name}</h1>\n                    <div className=\"artis\">\n                        <ul> <a style={styleObj} href={artistUrl} target=\"_blank\" rel = \"noopener noreferrer\">Click to see  info about the artist </a> </ul>                      \n                    </div>\n                    </div>}\n                    \n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default Artist","import React, { Component } from 'react';\nimport './project.css';\nimport PropTypes from 'prop-types';\n\nclass Album extends Component {\n\n    static propTypes = {\n       \n        artist: PropTypes.string.isRequired,\n        choice: PropTypes.string.isRequired,\n        size: PropTypes.string.isRequired\n    }\n\n    state = {\n        isLoading: true,\n        fetchResults: [],\n        error: '',\n        name:''\n    }\n\n\n    componentDidMount() {\n        let artistName = \"\";\n        let choiceValue = \"\";\n        let itemsSize = \"\";\n        let url = \"\";\n            artistName = this.props.artist;\n            choiceValue = this.props.choice;\n            if(this.props.size !==\"\"){\n                itemsSize = parseInt(this.props.size);\n              url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}&limit=${itemsSize}.`;\n            } else {\n                url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}`;\n            }\n\n            fetch(url, {\n                mode: 'no-cors' })\n                .then(response => response.json())\n                .then(data => {\n\n                    this.setState({\n                        fetchResults: data.results,\n                        isLoading: false,\n                        name: data.results[0]['artistName']\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        isLoading: false,\n                        error: \"Nothing Found â€“ Sorry, but nothing matched ... \"\n                    })\n                });\n    }\n\n\n    render() {\n        const { isLoading, error, fetchResults } = this.state;\n        const styleObj = {\n            fontSize: 15,\n            color: \"blue\",\n            textAlign: \"center\",\n            paddingTop: \"100px\",\n        }\n      \n\n        return (\n            <div className=\"flex-container-child\">\n            <div>\n                    {isLoading && <p>Loading...</p>}\n                    {error && <h3>{error}</h3>}\n                    <h1>{this.state.name}</h1>\n                    {fetchResults.map((result, idx) => {\n                        let odrer = idx+1;         \n                        return (\n\n                            <div className=\"container1\" key={idx}>\n                            <div className='description'>\n                                <h3>Number# {odrer}</h3>\n                                <h3>Album: {result['collectionName']}</h3>\n                                <h3>Track count: {result['trackCount']}</h3>\n                                  <div>\n                                  <img className='image'\n                                  src={result['artworkUrl100']}\n                                  alt='artis-image'>\n                                  </img>\n                                  <ul> <a style={styleObj} href={result['collectionViewUrl']} target=\"_blank\" rel = \"noopener noreferrer\">Click to review the Album </a> </ul>                      \n                            </div>                       \n                          </div>\n                              \n                      </div>\n                  \n                        )\n                    })}\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport  default Album","import React, { Component } from 'react';\nimport './project.css';\nimport PropTypes from 'prop-types';\n\nclass Video extends Component {\n\n    static propTypes = {\n       \n        artist: PropTypes.string.isRequired,\n        choice: PropTypes.string.isRequired,\n        size: PropTypes.string.isRequired\n    }\n\n    state = {\n        isLoading: true,\n        fetchResults: [],\n        error: '',\n        name:''\n    }\n\n\n    componentDidMount() {\n        let artistName = \"\";\n        let choiceValue = \"\";\n        let itemsSize = \"\";\n        let url = \"\";\n            artistName = this.props.artist;\n            choiceValue = this.props.choice;\n            if(this.props.size !==\"\"){\n                itemsSize = parseInt(this.props.size);\n              url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}&limit=${itemsSize}.`;\n            } else {\n                url = `https://itunes.apple.com/search?term=${artistName}&media=music&entity=${choiceValue}`;\n            }\n\n            fetch(url, {\n                mode: 'no-cors' })\n                .then(response => response.json())\n                .then(data => {\n\n                    this.setState({\n                        fetchResults: data.results,\n                        isLoading: false,\n                        name: data.results[0]['artistName']\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        isLoading: false,\n                        error: \"Nothing Found â€“ Sorry, but nothing matched ... \"\n                    })\n                });\n    }\n\n\n    render() {\n        const { isLoading, error, fetchResults } = this.state;\n        const styleObj = {\n            fontSize: 15,\n            color: \"blue\",\n            textAlign: \"center\",\n            paddingTop: \"100px\",\n        }\n      \n\n        return (\n           \n            <div>\n                    {isLoading && <p>Loading...</p>}\n                    {error && <h3>{error}</h3>}\n                    <h1>{this.state.name}</h1>\n                    {fetchResults.map((result, idx) => {\n                        let odrer = idx+1;         \n                        return (\n\n                            <div className=\"container1\" key={idx}>\n                            <div className='description'>\n                               <h3>Number# {odrer}</h3>\n                               <h3>Video: {result['trackName']}</h3>\n                                  <div>\n                                  <img className='image'\n                                  src={result['artworkUrl100']}\n                                  alt='artis-image'>\n                                  </img>\n                                <ul> <a style={styleObj} href={result['trackViewUrl']} target=\"_blank\" rel = \"noopener noreferrer\">Click to watch the video </a> </ul>                    \n                            </div>                       \n                          </div>\n                              \n                      </div>\n                        )\n                    })}\n                </div>\n\n           \n        );\n    }\n\n}\n\nexport  default Video","import React, { Component } from 'react';\nimport Songs from './Songs';\nimport Artist from './Artist';\nimport Album from './Album';\nimport Video from './Video';\nimport './project.css';\n\nclass HomePage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: \"\",\n            optionValue: \"\",\n            itemsValue: \"5\",\n            isItemsSelected: false,\n            isSubmitted: false\n           \n        };\n    }\n\n    onInputChange = (e) => {\n        const inputVal = e.target.value;\n        this.setState({\n            inputValue: inputVal,\n            isSubmitted: false\n        });\n    }\n\n    handleSelectOption = (e) => {\n    const inputVal = e.target.value;\n        this.setState({\n            optionValue: inputVal,\n            isSubmitted: false\n        });\n        if(inputVal==='musicArtist'){\n            this.setState({\n                isItemsSelected: false,\n                isSubmitted: false\n            });\n        } else{\n            this.setState({\n                isItemsSelected: true,\n                isSubmitted: false\n            });\n        }\n      };\n\n\n      handleSelect = (e) => {\n        const inputVal = e.target.value;\n            this.setState({\n                itemsValue: inputVal,\n                isSubmitted: false\n            });\n          };\n    \n\n          onSubmit = (e) => {\n            e.preventDefault();\n            const { inputValue, optionValue} = this.state;   \n            if(inputValue ===\"\" || optionValue===\"\"){\n                window.alert('Please, enter search criteria!');\n                this.setState({\n                    isSubmitted: false\n                });\n                return;\n            } else {\n                this.setState({\n                    isSubmitted: true\n                });\n            }           \n        }\n\n\n        onCompleteHandler = () => {\n            return () => {\n                this.setState({\n                    isSubmitted: false\n                });\n            }\n        }\n\n\n    render() {\n        return (\n            <div className='some-page-wrapper'>\n            <div className=\"container\">\n              <div>\n                <h1>Find your favorite Artist</h1>\n\n                    <form className=\"containerChild1\">\n                        <label >\n                            Artist's name:\n                        </label>\n                        <input className=\"inputField\" type=\"text\" name=\"name\" \n                        onChange={this.onInputChange}\n                        value={this.state.todoItem}/>\n\n                        <label>\n                            What are you looking for:                      \n                        </label>\n                        <select \n                        onChange={this.handleSelectOption}\n                        className=\"form-control\" name=\"kind\" id=\"entity\">\n                                <option value=\"choose\">\n                                    Choose one\n                            </option>\n                                <option value=\"musicArtist\">All about the artist</option>\n                                <option value=\"musicTrack\">Songs</option>\n                                <option value=\"album\">Albums</option>\n                                <option value=\"musicVideo\">Videos</option>\n                            </select>\n                        <div className=\"itemsPerPage\">\n                            {this.state.isItemsSelected && <div> \n                            <label>\n                                Items per page: \n                                \n                                </label>\n                                <select \n                                    onChange={this.handleSelect}\n                                    className=\"form-control\" name=\"kind\" id=\"number\">\n                                    <option value=\"5\">5</option>\n                                    <option value=\"10\">10</option>\n                                    <option value=\"15\">15</option>\n                                    <option value=\"20\">20</option>\n                                </select> \n                        </div>}\n                                                \n                        </div>\n                        \n                        <button \n                        onClick={this.onSubmit}\n                        className=\"button\" \n                        type=\"submit\" \n                        > Get Your Music</button>\n                    </form>\n                </div>\n                \n                <div  className=\"containerChild2\">\n                    <div className='column'> \n                    { this.state.isSubmitted && <div>\n                    { this.state.optionValue==='musicTrack' && \n                     <div>              \n                        <Songs\n                            artist ={this.state.inputValue}\n                            choice = {this.state.optionValue}\n                            size={this.state.itemsValue} \n                        />\n                    \n                    </div>\n                    }      \n                     { this.state.optionValue==='musicArtist' && \n                     <div>              \n                        <Artist\n                            artist ={this.state.inputValue}\n                            choice = {this.state.optionValue}\n                            size={this.state.itemsValue} \n                        />\n                    \n                    </div>\n                    }      \n                    { this.state.optionValue==='album' && \n                     <div>              \n                        <Album\n                            artist ={this.state.inputValue}\n                            choice = {this.state.optionValue}\n                            size={this.state.itemsValue} \n                        />\n                    \n                    </div>\n                    }      \n                    { this.state.optionValue==='musicVideo' && \n                     <div>              \n                        <Video\n                            artist ={this.state.inputValue}\n                            choice = {this.state.optionValue}\n                            size={this.state.itemsValue} \n                        />\n                    \n                    </div>\n                    }          \n\n\n                    </div>}\n                    \n                     </div>\n              \n                        \n               </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default HomePage","\nimport './components/project.css';\nimport HomePage from './components/HomePage';\n\n\nfunction App() {\n  return (\n    <div >\n      <HomePage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}